<!DOCTYPE html>
<html>
<head>
							 <title>A Weather Story</title>
							 <link rel="stylesheet" href="/styles.css">
							 <link rel="icon" type="image/png" href="/images/sunicon.png">
		<meta name="viewport" content="width=device-width, initial-scale=1">

							 <style>
								  .small-text {
										font-size: 0.8em;
								  }
								  .hidden {
										display: none;
								  }
								  .container {
										max-width: 800px;
										margin: auto;
										padding: 20px;
								  }
							 </style>
		 <!-- Google tag (gtag.js) -->
		 <script async src="https://www.googletagmanager.com/gtag/js?id=G-G6SC9GX5RB"></script>
		 <script>
			  window.dataLayer = window.dataLayer || [];
			  function gtag(){dataLayer.push(arguments);}
			  gtag('js', new Date());
			  gtag('config', 'G-G6SC9GX5RB');

			  // Uncomment and use this line if you need to configure Google Ads
			  gtag('config', 'AW-11415100394');
		 </script>

	<!-- Google tag (gtag.js) -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-3LTJ6P6R4Q"></script>
	<script>
	  window.dataLayer = window.dataLayer || [];
	  function gtag(){dataLayer.push(arguments);}
	  gtag('js', new Date());
	  gtag('config', 'G-3LTJ6P6R4Q');
	</script>


	<!-- Event snippet for Page view conversion page -->
	<script>
		 gtag('event', 'conversion', {'send_to': 'AW-11415100394/EjTECMSQzfcYEOq3ksMq'});
	</script>


	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7051464837195925"
		  crossorigin="anonymous"></script>

	<!-- Twitter conversion tracking base code -->
	<script>
	!function(e,t,n,s,u,a){e.twq||(s=e.twq=function(){s.exe?s.exe.apply(s,arguments):s.queue.push(arguments);
	},s.version='1.1',s.queue=[],u=t.createElement(n),u.async=!0,u.src='https://static.ads-twitter.com/uwt.js',
	a=t.getElementsByTagName(n)[0],a.parentNode.insertBefore(u,a))}(window,document,'script');
	twq('config','ohg64');
	</script>
	<!-- End Twitter conversion tracking base code -->

	<!-- Google Tag Manager -->
	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
	'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','GTM-T8QXCC9J');</script>
	<!-- End Google Tag Manager -->


	</head>
	<body>

		<!-- Google Tag Manager (noscript) -->
		<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T8QXCC9J"
		height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
		<!-- End Google Tag Manager (noscript) -->
		<!-- Header banner image -->
		<img src="images/banner2.jpg" alt="Weather Banner" class="header-banner">
		<div class="container">
								  <h1>Fun With Weather</h1>
								  <h3>Responses generated by AI</h3>

								  <h2>Enter any location below</h2>
								  <!-- Insert the following new code right here -->
								  <p class="small-text">
									 When entering a location, we will only fetch information on that location. We know nothing about you -- not even your location. When you click "submit" it will load the weather data in a chosen location and provide a response.
								  </p>

								  <div class="line-space"></div>
								  <form id="locationForm">
										<input type="text" id="locationInput" placeholder="Enter location" class="input-field">
									 <div style="margin-top:12px;">
									 <input type="checkbox" id="picture" name="picture" class="input-field">
									 <label for="picture">Generate Picture</label>
									 <input type="checkbox" id="audio" name="audio" class="input-field">
									 <label for="audio">Generate Audio</label>
										</div>
									  <p class="small-text" style="text-align:center;">Please select the type of summary you'd like to see:</p>
									 <div style="display:flex;justify-content:center;gap:0">
										<div style="width:fit-content;display:flex;gap:12px;">
										<button onclick="this.form.submitted=this.value;" name="summaryType" value="creative" type="submit" id="creativeButton" class="submit-button">Creative Summary</button>
									 <button onclick="this.form.submitted=this.value;" id="proButton" name="summaryType" type="submit" value="pro" class="submit-button">Professional Summary</button>
										</div>
										</div>
										<p id="loadingMessage" class="small-text hidden" style="text-align: center;">
											 This will take about 15 seconds to render without the pictures or audio.  Stay tuned! ... for images/audio, it will take up to 40 seconds.</p>

										<div id="progressBarContainer" class="hidden">
										  <div id="progressBar"></div>
										</div>

								  </form>


								  <img src="/images/sun.gif" id="loadingGif" class="hidden" alt="Loading...">




								  <div id="result" class="hidden">
										<p id="dramaticSummary" class="dramatic-summary"></p>
										<div id="audioContainer" class="hidden">
											 <audio id="audioPlayer" controls class="hidden">
												  <source src="" type="audio/mpeg">
												  Your browser does not support the audio element.
											 </audio>
											 <button id="playButton" onclick="document.getElementById('audioPlayer').play()" class="hidden">Play Audio</button>
										</div>
										<div id="imageContainer" class="hidden">
											 <img id="generatedImage" src="" alt="Generated Image" class="hidden">
										</div>

									  <div id="walkScoreInfo" class="walk-score-container hidden">
										 <a href="" id="walkScoreLink" target="_blank">
											<img id="walkScoreLogo" src="" alt="Walk Score Logo">
										 </a>
										 <p id="walkScoreDescription"></p>
										 <a href="" id="walkScoreMoreInfo" target="_blank">How Walk Score works?</a>
									  </div>
								  </div>
							 </div>
		<p id="coordinates" class="small-text hidden"></p>

		 <!-- Add the text and link here -->
		 <div style="text-align: center; padding: 20px 0;">
			I'd love to share my code and how I did this, which I will put soon on <a href="https://www.youtube.com/channel/UCCMsTrtsSXUiUiSH7TNC72Q" target="_blank">my YouTube page I just created</a>. If you want to know how this was made, please email me (contact info below) and I can share code or walk through it with you!
		 </div>

		  <div class="centered-link">
			 <a href="https://chat.openai.com/g/g-oTiZBeyeF-fun-with-weather">
				See my Custom Weather GPT Here (Must have Chat GPT Plus)
			 </a>
		  </div>
		
		<!-- New div container for the AdSense ad -->
		<div style="text-align: center; margin-top: 20px; margin-bottom: 20px;">
			 <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7051464837195925"
						crossorigin="anonymous"></script>
		</div>

		<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7051464837195925"
			  crossorigin="anonymous"></script>
		<!-- Firstadunit -->
		<ins class="adsbygoogle"
			  style="display:block"
			  data-ad-client="ca-pub-7051464837195925"
			  data-ad-slot="4915515831"
			  data-ad-format="auto"
			  data-full-width-responsive="true"></ins>
		<script>
			  (adsbygoogle = window.adsbygoogle || []).push({});
		</script>


							 <script>




								document.getElementById('locationForm').addEventListener('submit', async function (event) {
										 event.preventDefault();
							 let loadingButton = event.submitter
							 let summaryType = event.submitter.value
										 const loadingGif = document.getElementById('loadingGif');
										 const locationInput = document.getElementById('locationInput').value;
										 const submitButtons = event.target.querySelectorAll('button[type="submit"]');
										 loadingButton.textContent = 'Loading...';
										 submitButtons.forEach(btn => { btn.disabled = true; })

										 const loadingMessage = document.getElementById('loadingMessage');
										 loadingMessage.classList.remove('hidden');

										 // Send the custom event along with the location input to Google Analytics via Google Tag Manager
										 gtag('event', 'weatherFormSubmission', {
											  'event_category': 'Form Submission',
											  'event_label': 'Location Form',
											  'value': 1,
											  'locationInput': locationInput // Make sure the parameter name here matches the one in your GA custom dimension
										 });

										 const progressBarContainer = document.getElementById('progressBarContainer');
										 const progressBar = document.getElementById('progressBar');
										 progressBarContainer.style.display = 'block';
										 progressBarContainer.offsetHeight;
										 progressBar.style.width = '100%';
										 loadingGif.style.display = 'block';

										 try {
											  const coordinatesResponse = await fetch('/getLocationCoordinates', {
													method: 'POST',
													headers: { 'Content-Type': 'application/json' },
													body: JSON.stringify({ location: locationInput })
											  });

											  if (!coordinatesResponse.ok) {
													throw new Error('Error fetching coordinates');
											  }

											  const coordinates = await coordinatesResponse.json();
											  const coordinatesParagraph = document.getElementById('coordinates');
											  coordinatesParagraph.classList.remove('hidden');
											  coordinatesParagraph.innerHTML = `Latitude: ${coordinates.latitude}, Longitude: ${coordinates.longitude}`;

											  const weatherResponse = await fetch('/getWeatherData', {
													method: 'POST',
													headers: { 'Content-Type': 'application/json' },
													body: JSON.stringify({ latitude: coordinates.latitude, longitude: coordinates.longitude })
											  });

											  if (!weatherResponse.ok) {
													throw new Error('Error fetching weather data');
											  }

											  const weatherData = await weatherResponse.json();
							  let genPicture = () => document.getElementById("picture").checked
							  let genAudio =() => document.getElementById("audio").checked
											  const summaryResponse = await fetch('/generateSummary', {
													method: 'POST',
													headers: { 'Content-Type': 'application/json' },
													body: JSON.stringify({
														 dailyForecasts: weatherData.dailyForecasts,
														 lat: coordinates.latitude,
														 lon: coordinates.longitude,
														 address: locationInput, // Assuming the address is the same as the location input
									 picture: genPicture(),
									 audio:genAudio(),
									 summaryType
													})
											  });

											  const summaryData = await summaryResponse.json();
											 console.log({summaryData}) 
							  document.getElementById('dramaticSummary').innerText = summaryData.summary;

											  // New code to handle Walk Score data
											  const walkScoreInfo = document.getElementById('walkScoreInfo');
											  if (summaryData.walkScore) {
													walkScoreInfo.querySelector('#walkScoreLink').href = summaryData.walkScore.ws_link;
													walkScoreInfo.querySelector('#walkScoreLogo').src = summaryData.walkScore.logo_url;
													walkScoreInfo.querySelector('#walkScoreDescription').innerText = `Walk Score: ${summaryData.walkScore.walkscore}, ${summaryData.walkScore.description}`;
													walkScoreInfo.querySelector('#walkScoreMoreInfo').href = summaryData.walkScore.more_info_link;
													walkScoreInfo.classList.remove('hidden');
											  } else {
													walkScoreInfo.classList.add('hidden');
											  }

											  if (summaryData.audioBase64) {
													const audioContainer = document.getElementById('audioContainer');
													const audioPlayer = document.getElementById('audioPlayer');
													const playButton = document.getElementById('playButton');
													const audioSource = audioPlayer.querySelector('source');
													audioSource.src = `data:audio/mpeg;base64,${summaryData.audioBase64}`;
													audioPlayer.classList.remove('hidden');
													playButton.classList.remove('hidden');
													audioContainer.classList.remove('hidden');
													audioPlayer.load();
											  }

											  if (summaryData.imageUrl) {
													const imageContainer = document.getElementById('imageContainer');
													const imageElement = document.getElementById('generatedImage');
													imageElement.src = summaryData.imageUrl;
													imageElement.classList.remove('hidden');
													imageContainer.classList.remove('hidden');
											  }
										 } catch (error) {
											  console.error('Error:', error);
											  document.getElementById('dramaticSummary').innerText = error.message;
										 } finally {
											  loadingGif.style.display = 'none';
											  progressBar.style.width = '0%';
											  progressBarContainer.style.display = 'none';
											  document.getElementById('result').classList.remove('hidden');
											  loadingButton.textContent = summaryType==="pro" ? 'Professional Summary' : 'Creative Summary';
											 // submitButton.disabled = false;
								submitButtons.forEach(btn=>{ btn.disabled = false; })

										 }
									});

								  document.addEventListener('DOMContentLoaded', function () {
										document.getElementById('subscribeForm').addEventListener('submit', function(event) {
											 event.preventDefault(); // Prevents the default form submission action, which reloads the page
											 const name = document.getElementById('nameInput').value;
											 const email = document.getElementById('emailInput').value;
											 const statusMessage = document.getElementById('subscriptionStatus');

											 // AJAX request to your server
											 fetch('/subscribe', {
												  method: 'POST',
												  headers: {'Content-Type': 'application/json'},
												  body: JSON.stringify({ name: name, email: email })
											 })
											 .then(response => response.json())
											 .then(data => {
												  statusMessage.textContent = 'SUCCESS!'; // Update this line
												  statusMessage.classList.remove('hidden'); // Make sure this element is visible
											 })
											 .catch((error) => {
												  statusMessage.textContent = 'Subscription failed'; // Handle errors here, e.g., show an error message
												  statusMessage.classList.remove('hidden'); // Make sure this element is visible
});
 });
});
</script>

<footer>
 <p>Contact us at: <a href="mailto:stephen@weathertalk.ai">stephen@weathertalk.ai</a></p>
<h3>Subscribe to our newsletter</h3>
<form id="subscribeForm">
<input type="text" id="nameInput" placeholder="Enter your name" required>
<input type="email" id="emailInput" placeholder="Enter your email" required>
<button type="submit">Subscribe!</button>
<p id="subscriptionStatus" class="hidden">SUCCESS!</p>
</form>
 <p class="privacy-link">
										<a href="privacy-policy.html">Privacy Policy</a>
</p>
</footer>
</body>
</html>